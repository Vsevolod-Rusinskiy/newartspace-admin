name: Master CI/CD

on:
  push:
    branches:
      - master

jobs:
  prettier-lint-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.9.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run Prettier check
        run: yarn prettier-check

      - name: Run Lint check
        run: yarn lint

  build-and-push-image:
    needs: prettier-lint-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/vsevolod-rusinskiy/newartspace-admin:latest
          no-cache: true

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

    # - name: Deploy to Server
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     command_timeout: 360m
    #     script: |
    #       cd /var/www/newartspace/admin
    #       docker-compose down
    #       git restore .
    #       git pull origin master
    #       docker-compose build --no-cache
    #       docker-compose up -d

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.28.13'

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CERTIFICATE }}" | base64 --decode > ~/.kube/certificate.crt
          echo "${{ secrets.KUBECONFIG_CLIENT_CERT }}" | base64 --decode > ~/.kube/client.crt
          echo "${{ secrets.KUBECONFIG_CLIENT_KEY }}" | base64 --decode > ~/.kube/client.key

          cat <<EOF > ~/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
           certificate-authority: ~/.kube/certificate.crt
           server: https://193.108.113.149:6443
          name: kubernetes
          contexts:
          - context:
           cluster: kubernetes
           user: kubernetes-admin
          name: kubernetes-admin@kubernetes
          current-context: kubernetes-admin@kubernetes
          kind: Config
          preferences: {}
          users:
          - name: kubernetes-admin
          user:
           client-certificate: ~/.kube/client.crt
           client-key: ~/.kube/client.key
          EOF

          chmod 600 ~/.kube/config

          - name: Kubernetes Rollout Restart
            env:
              KUBECONFIG: ~/.kube/config
            run: |
              kubectl rollout restart deployment admin
