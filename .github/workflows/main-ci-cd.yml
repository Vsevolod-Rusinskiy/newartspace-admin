name: Master CI/CD

on:
  push:
    branches:
      - master

jobs:
  prettier-lint-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.9.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run Prettier check
        run: yarn prettier-check

      - name: Run Lint check
        run: yarn lint

  build-and-push-image:
    needs: prettier-lint-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/vsevolod-rusinskiy/newartspace-admin:latest
          no-cache: true

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Deploy to Server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     command_timeout: 360m
      #     script: |
      #       cd /var/www/newartspace/admin
      #       docker-compose down
      #       git restore .
      #       git pull origin master
      #       docker-compose build --no-cache
      #       docker-compose up -d

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.28.13'

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "apiVersion: v1" > ~/.kube/config
          echo "clusters:" >> ~/.kube/config
          echo "- cluster:" >> ~/.kube/config
          echo "    certificate-authority: ~/.kube/certificate.crt" >> ~/.kube/config
          echo "    server: https://193.108.113.149:6443" >> ~/.kube/config
          echo "  name: kubernetes" >> ~/.kube/config
          echo "contexts:" >> ~/.kube/config
          echo "- context:" >> ~/.kube/config
          echo "    cluster: kubernetes" >> ~/.kube/config
          echo "    user: kubernetes-admin" >> ~/.kube/config
          echo "  name: kubernetes-admin@kubernetes" >> ~/.kube/config
          echo "current-context: kubernetes-admin@kubernetes" >> ~/.kube/config
          echo "kind: Config" >> ~/.kube/config
          echo "preferences: {}" >> ~/.kube/config
          echo "users:" >> ~/.kube/config
          echo "- name: kubernetes-admin" >> ~/.kube/config
          echo "  user:" >> ~/.kube/config
          echo "    client-certificate: ~/.kube/client.crt" >> ~/.kube/config
          echo "    client-key: ~/.kube/client.key" >> ~/.kube/config

          chmod 600 ~/.kube/config

      - name: Display kubeconfig content
        run: cat ~/.kube/config

      - name: Set kubectl context
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl config use-context kubernetes-admin@kubernetes

      - name: Verify kubectl connection
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl get nodes

      - name: Check KUBECONFIG environment variable
        run: echo $KUBECONFIG

      - name: Kubernetes Rollout Restart
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl rollout restart deployment admin
