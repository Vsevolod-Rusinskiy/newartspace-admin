import {
  Show,
  SimpleShowLayout,
  TextField,
  DateField,
  NumberField,
  ArrayField,
  Datagrid,
  useShowController,
  useDataProvider,
  useNotify,
  useRefresh,
  useListContext,
  Button,
} from 'react-admin'

const OrderItemsBulkDeleteButton = () => {
  const { record } = useShowController()
  const dataProvider = useDataProvider()
  const notify = useNotify()
  const refresh = useRefresh()
  const { selectedIds } = useListContext()

  const handleDelete = async () => {
    if (!selectedIds || selectedIds.length === 0) {
      notify('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è', { type: 'warning' })
      return
    }

    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏?')) {
      return
    }

    try {
      console.log('=== –ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π ===')
      console.log('ID –∑–∞–∫–∞–∑–∞:', record?.id)
      console.log('–¢–∏–ø ID –∑–∞–∫–∞–∑–∞:', typeof record?.id)
      console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏:', selectedIds)
      console.log('–¢–∏–ø –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π:', typeof selectedIds)

      await dataProvider.deleteOrderItems(
        Number(record.id),
        selectedIds.map(Number)
      )

      notify('ra.notification.deleted', {
        type: 'success',
        messageArgs: { smart_count: selectedIds.length },
      })
      refresh()
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error)
      notify('ra.notification.http_error', { type: 'error' })
    }
  }

  return (
    <Button
      label='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏'
      onClick={handleDelete}
      disabled={!selectedIds || selectedIds.length === 0}
    />
  )
}

export const OrderShow = () => {
  return (
    <Show>
      <SimpleShowLayout>
        <TextField source='id' />
        <TextField source='customerName' label='üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞' />
        <TextField source='customerEmail' label='‚úâÔ∏è Email' />
        <TextField source='customerPhone' label='üì± –¢–µ–ª–µ—Ñ–æ–Ω' />
        <TextField source='shippingAddress' label='üè† –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏' />
        <TextField source='description' label='üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É' />
        <NumberField source='totalPrice' label='üí∞ –û–±—â–∞—è —Å—É–º–º–∞' />
        <TextField source='status.displayName' label='üìä –°—Ç–∞—Ç—É—Å' />
        <DateField source='createdAt' label='üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è' showTime />
        <DateField source='updatedAt' label='üîÑ –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' showTime />

        <ArrayField source='orderItems' label='üì¶ –ü–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–∞'>
          <Datagrid bulkActionButtons={<OrderItemsBulkDeleteButton />}>
            <TextField source='id' label='ID –ø–æ–∑–∏—Ü–∏–∏' />
            <TextField source='paintingId' label='ID –∫–∞—Ä—Ç–∏–Ω—ã' />
            <NumberField source='quantity' label='üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ' />
            <NumberField source='price' label='üí∞ –¶–µ–Ω–∞' />
          </Datagrid>
        </ArrayField>
      </SimpleShowLayout>
    </Show>
  )
}
