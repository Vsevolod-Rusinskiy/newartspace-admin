import { useState, useEffect } from 'react'
import axios from 'axios'
import {
  Create,
  SimpleForm,
  required,
  ImageInput,
  ImageField,
  RadioButtonGroupInput,
  SelectArrayInput,
} from 'react-admin'
import { RichTextInput } from 'ra-input-rich-text'
import { SelectInputComponent, TextInputComponent } from '../../inputs'
import { validateFileSize } from '../../../src/utils/common'
import '../../../styles/customStyles.css'
import { IsReprodusibleSpan } from '../../../src/utils/isReprodusibleSpan'

const requiredValidation = required('–≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ')

const apiUrl = import.meta.env.VITE_APP_API_URL || 'https://back.newartspace.ru'

export const PaintingCreate = () => {
  const [authors, setAuthors] = useState([])
  const [selectLists, setSelectLists] = useState({
    artTypesList: [],
    colorsList: [],
    formatsList: [],
    materialsList: [],
    stylesList: [],
    themesList: [],
    techniquesList: [],
    priceTypesList: [],
  })

  useEffect(() => {
    axios
      .get(`${apiUrl}/artists?limit=1000`)
      .then((response) => {
        setAuthors(response.data.data)
      })
      .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤:', error)
      })

    axios
      .get(`${apiUrl}/attributes`)
      .then((response) => {
        setSelectLists(response.data.data)
      })
      .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤:', error)
      })
  }, [])

  const {
    artTypesList,
    colorsList,
    formatsList,
    materialsList,
    stylesList,
    themesList,
    techniquesList,
    priceTypesList,
  } = selectLists

  return (
    <Create mutationMode='pessimistic'>
      <SimpleForm>
        <ImageInput
          source='pictures'
          label='üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã'
          validate={validateFileSize}
        >
          <ImageField source='src' title='title' />
        </ImageInput>
        <RadioButtonGroupInput
          source='artStyle'
          choices={[
            { id: '–¢—Ä–∞–¥–∏—Ü–∏–∏', name: '–¢—Ä–∞–¥–∏—Ü–∏–∏' },
            { id: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å' },
          ]}
          label='üé≠ –°—Ç–∏–ª—å –∏—Å–∫—É—Å—Å—Ç–≤–∞'
          defaultValue='–¢—Ä–∞–¥–∏—Ü–∏–∏'
        />
        <RadioButtonGroupInput
          source='isReproducible'
          choices={[
            { id: 'true', name: '–î–∞' },
            { id: 'false', name: '–ù–µ—Ç' },
          ]}
          label='üîÑ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–ø—Ä–æ–¥—É–∫—Ü–∏–∏'
          defaultValue='false'
        />
        <IsReprodusibleSpan />
        <SelectInputComponent
          source='priceType'
          choices={priceTypesList}
          label='üí≥ –¢–∏–ø —Ü–µ–Ω—ã'
        />
        <TextInputComponent
          source='price'
          label='üí∞ –¶–µ–Ω–∞'
          validate={requiredValidation}
        />
        <TextInputComponent source='discount' label='üè∑Ô∏è –°–∫–∏–¥–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö' />
        <TextInputComponent source='priority' label='‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç' />
        <SelectInputComponent
          source='artistId'
          choices={authors.map((author) => ({
            id: author.id,
            value: author.artistName,
          }))}
          optionValue='id'
          label='üë®‚Äçüé® –ê–≤—Ç–æ—Ä –∫–∞—Ä—Ç–∏–Ω—ã'
          validate={requiredValidation}
        />
        <TextInputComponent
          source='title'
          label='üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã'
          validate={requiredValidation}
        />
        <SelectInputComponent
          source='artType'
          choices={artTypesList}
          label='üé® –í–∏–¥ –∏—Å–∫—É—Å—Å—Ç–≤–∞'
        />
        <SelectInputComponent
          source='style'
          choices={stylesList}
          label='‚ú® –°—Ç–∏–ª—å'
        />
        <SelectInputComponent
          source='theme'
          choices={themesList}
          label='üéØ –û—Å–Ω–æ–≤–Ω–∞—è —Ç–µ–º–∞—Ç–∏–∫–∞'
        />
        <SelectArrayInput
          source='themes'
          choices={themesList.map((theme) => ({
            id: theme.id,
            name: theme.value,
          }))}
          label='üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º–∞—Ç–∏–∫–∏'
          style={{ minWidth: '300px' }}
          defaultValue={[]}
        />
        <SelectInputComponent
          source='material'
          choices={materialsList}
          label='üõ†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª'
        />
        <SelectArrayInput
          source='materials'
          choices={materialsList.map((material) => ({
            id: material.id,
            name: material.value,
          }))}
          label='üß∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
          style={{ minWidth: '300px' }}
          defaultValue={[]}
        />
        <SelectInputComponent
          source='technique'
          choices={techniquesList}
          label='üîß –û—Å–Ω–æ–≤–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞'
        />
        <SelectArrayInput
          source='techniques'
          choices={techniquesList.map((technique) => ({
            id: technique.id,
            name: technique.value,
          }))}
          label='‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏'
          style={{ minWidth: '300px' }}
          defaultValue={[]}
        />
        <SelectInputComponent
          source='color'
          choices={colorsList}
          label='üé® –¶–≤–µ—Ç'
        />
        <SelectArrayInput
          source='colors'
          choices={colorsList.map((color) => ({
            id: color.id,
            name: color.value,
          }))}
          label='üåà –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞'
          style={{ minWidth: '300px' }}
          defaultValue={[]}
        />
        <TextInputComponent source='width' label='‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞' />
        <TextInputComponent source='height' label='‚ÜïÔ∏è –í—ã—Å–æ—Ç–∞' />
        <TextInputComponent source='yearOfCreation' label='üìÖ –ì–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è' />
        <SelectInputComponent
          source='format'
          choices={formatsList}
          label='üìê –§–æ—Ä–º–∞—Ç'
        />
        <RichTextInput
          source='description'
          label='üìù –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã'
          className='custom-richtext-input'
        />
      </SimpleForm>
    </Create>
  )
}
